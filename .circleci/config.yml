version: 2
defaults: &defaults
  working_directory: ~/parity
  docker:
    - image: rust:1.31

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install cmake
          working_directory: /
          command: |
            wget https://cmake.org/files/v3.4/cmake-3.4.1-Linux-x86_64.tar.gz;
            tar xf cmake-3.4.1-Linux-x86_64.tar.gz;
            echo 'export PATH="/cmake-3.4.1-Linux-x86_64/bin:$PATH"' >> $BASH_ENV;
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          key: cargo-test-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Run the tests
          command: exec ./test.sh
      - save_cache:
          key: cargo-test-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
  deploy_docker_image:
    environment:
      FINAL_IMAGE: registry.dev.infra.chronicled.com/blockchain-interface
    working_directory: ~/parity
    docker:
      - image: docker/compose:1.22.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: cargo-docker-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run: 
          name: Setup Docker credentials
          command: mkdir -p ~/.docker; echo -n "${REGISTRY_AUTH}" > ~/.docker/config.json;
      - run:
          name: Load Docker image layer cache
          command: |
            if [ -f /caches/parity-image.tar ]; then docker load -i /caches/parity-image.tar; fi
      - run:
          name: Build docker image
          command: |
            export SHORT_COMMIT="$(echo $CIRCLE_SHA1 | cut -c1-7)";
            export PREV_IMAGE=`docker images "${FINAL_IMAGE}" --format "{{.Repository}}:{{.Tag}}" | head -n 1`;
            docker build --rm=false -f scripts/docker/alpine/Dockerfile --tag "${FINAL_IMAGE}:${SHORT_COMMIT}" . --cache-from="${PREV_IMAGE}";
      - run:
          name: Deploy to dockerhub
          command: |
            SHORT_COMMIT="$(echo $CIRCLE_SHA1 | cut -c1-7)";
            docker push "${FINAL_IMAGE}:${SHORT_COMMIT}";
            docker logout;
      - save_cache:
          key: cargo-docker-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
          paths:
            - /caches/parity-image.tar

workflows:
  version: 2
  blockchain-interface-workflow:
    jobs:
      - test
      - deploy_docker_image:
          requires:
            - test
